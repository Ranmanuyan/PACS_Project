# Makefile.in generated by automake 1.11.1 from Makefile.am.
# examples/Mole/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# ==========================================================================
# Copyright(c)'2005 by PRiSM Laboratory Opale Team
# see the copyright file for more information
# Author: B. Le Cun
# Makefile.am for examples/TestDC Bob++ library
#
#	This makefile.am is used to generate the real makefile using the GNU
#	autotools suite.
#	The example is :
#	From thses source codes, we are able to execute the resolution in the 
#	Sequential, Threaded, Atha and mpi environments.
#
# ==========================================================================


pkgdatadir = $(datadir)/bobpp
pkgincludedir = $(includedir)/bobpp
pkglibdir = $(libdir)/bobpp
pkglibexecdir = $(libexecdir)/bobpp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin16.5.0
host_triplet = x86_64-apple-darwin16.5.0
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
subdir = examples/Mole
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = cmole$(EXEEXT) omole$(EXEEXT) ctrap$(EXEEXT) \
	otrap$(EXEEXT)
am__EXEEXT_2 = cmolethr$(EXEEXT) omolethr$(EXEEXT) ctrapthr$(EXEEXT) \
	otrapthr$(EXEEXT)
#am__EXEEXT_3 = cmoleatha$(EXEEXT) omoleatha$(EXEEXT) \
#	ctrapatha$(EXEEXT) otrapatha$(EXEEXT)
am__EXEEXT_4 = cmolempi$(EXEEXT) omolempi$(EXEEXT) \
	ctrapmpi$(EXEEXT) otrapmpi$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_cmole_OBJECTS = cmole-mole.$(OBJEXT)
cmole_OBJECTS = $(am_cmole_OBJECTS)
cmole_LDADD = $(LDADD)
cmole_DEPENDENCIES =
am__cmoleatha_SOURCES_DIST = mole.cpp
#am_cmoleatha_OBJECTS = cmoleatha-mole.$(OBJEXT)
cmoleatha_OBJECTS = $(am_cmoleatha_OBJECTS)
cmoleatha_LDADD = $(LDADD)
cmoleatha_DEPENDENCIES =
cmoleatha_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(cmoleatha_LDFLAGS) $(LDFLAGS) -o $@
am__cmolempi_SOURCES_DIST = mole.cpp
am_cmolempi_OBJECTS = cmolempi-mole.$(OBJEXT)
cmolempi_OBJECTS = $(am_cmolempi_OBJECTS)
cmolempi_LDADD = $(LDADD)
cmolempi_DEPENDENCIES =
am_cmolethr_OBJECTS = cmolethr-mole.$(OBJEXT)
cmolethr_OBJECTS = $(am_cmolethr_OBJECTS)
cmolethr_LDADD = $(LDADD)
cmolethr_DEPENDENCIES =
am_ctrap_OBJECTS = ctrap-trap.$(OBJEXT)
ctrap_OBJECTS = $(am_ctrap_OBJECTS)
ctrap_LDADD = $(LDADD)
ctrap_DEPENDENCIES =
am__ctrapatha_SOURCES_DIST = trap.cpp
#am_ctrapatha_OBJECTS = ctrapatha-trap.$(OBJEXT)
ctrapatha_OBJECTS = $(am_ctrapatha_OBJECTS)
ctrapatha_LDADD = $(LDADD)
ctrapatha_DEPENDENCIES =
ctrapatha_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(ctrapatha_LDFLAGS) $(LDFLAGS) -o $@
am__ctrapmpi_SOURCES_DIST = trap.cpp
am_ctrapmpi_OBJECTS = ctrapmpi-trap.$(OBJEXT)
ctrapmpi_OBJECTS = $(am_ctrapmpi_OBJECTS)
ctrapmpi_LDADD = $(LDADD)
ctrapmpi_DEPENDENCIES =
am_ctrapthr_OBJECTS = ctrapthr-trap.$(OBJEXT)
ctrapthr_OBJECTS = $(am_ctrapthr_OBJECTS)
ctrapthr_LDADD = $(LDADD)
ctrapthr_DEPENDENCIES =
am_omole_OBJECTS = mole.$(OBJEXT)
omole_OBJECTS = $(am_omole_OBJECTS)
omole_LDADD = $(LDADD)
omole_DEPENDENCIES =
am__omoleatha_SOURCES_DIST = mole.cpp
#am_omoleatha_OBJECTS = omoleatha-mole.$(OBJEXT)
omoleatha_OBJECTS = $(am_omoleatha_OBJECTS)
omoleatha_LDADD = $(LDADD)
omoleatha_DEPENDENCIES =
omoleatha_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(omoleatha_LDFLAGS) $(LDFLAGS) -o $@
am__omolempi_SOURCES_DIST = mole.cpp
am_omolempi_OBJECTS = omolempi-mole.$(OBJEXT)
omolempi_OBJECTS = $(am_omolempi_OBJECTS)
omolempi_LDADD = $(LDADD)
omolempi_DEPENDENCIES =
am_omolethr_OBJECTS = omolethr-mole.$(OBJEXT)
omolethr_OBJECTS = $(am_omolethr_OBJECTS)
omolethr_LDADD = $(LDADD)
omolethr_DEPENDENCIES =
am_otrap_OBJECTS = trap.$(OBJEXT)
otrap_OBJECTS = $(am_otrap_OBJECTS)
otrap_LDADD = $(LDADD)
otrap_DEPENDENCIES =
am__otrapatha_SOURCES_DIST = trap.cpp
#am_otrapatha_OBJECTS = otrapatha-trap.$(OBJEXT)
otrapatha_OBJECTS = $(am_otrapatha_OBJECTS)
otrapatha_LDADD = $(LDADD)
otrapatha_DEPENDENCIES =
otrapatha_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(otrapatha_LDFLAGS) $(LDFLAGS) -o $@
am__otrapmpi_SOURCES_DIST = trap.cpp
am_otrapmpi_OBJECTS = otrapmpi-trap.$(OBJEXT)
otrapmpi_OBJECTS = $(am_otrapmpi_OBJECTS)
otrapmpi_LDADD = $(LDADD)
otrapmpi_DEPENDENCIES =
am_otrapthr_OBJECTS = otrapthr-trap.$(OBJEXT)
otrapthr_OBJECTS = $(am_otrapthr_OBJECTS)
otrapthr_LDADD = $(LDADD)
otrapthr_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(cmole_SOURCES) $(cmoleatha_SOURCES) $(cmolempi_SOURCES) \
	$(cmolethr_SOURCES) $(ctrap_SOURCES) $(ctrapatha_SOURCES) \
	$(ctrapmpi_SOURCES) $(ctrapthr_SOURCES) $(omole_SOURCES) \
	$(omoleatha_SOURCES) $(omolempi_SOURCES) $(omolethr_SOURCES) \
	$(otrap_SOURCES) $(otrapatha_SOURCES) $(otrapmpi_SOURCES) \
	$(otrapthr_SOURCES)
DIST_SOURCES = $(cmole_SOURCES) $(am__cmoleatha_SOURCES_DIST) \
	$(am__cmolempi_SOURCES_DIST) $(cmolethr_SOURCES) \
	$(ctrap_SOURCES) $(am__ctrapatha_SOURCES_DIST) \
	$(am__ctrapmpi_SOURCES_DIST) $(ctrapthr_SOURCES) \
	$(omole_SOURCES) $(am__omoleatha_SOURCES_DIST) \
	$(am__omolempi_SOURCES_DIST) $(omolethr_SOURCES) \
	$(otrap_SOURCES) $(am__otrapatha_SOURCES_DIST) \
	$(am__otrapmpi_SOURCES_DIST) $(otrapthr_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run automake-1.11
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = dsymutil
DUMPBIN = 
DX_CONFIG = doxygen.cfg
DX_DOCDIR = doxygen-doc
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='bobpp' DOCDIR='doxygen-doc' VERSION='0.3.0' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = bobpp
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GENERIC_API_VERSION = 1.0
GENERIC_LIBRARY_NAME = bobpp
GENERIC_LIBRARY_VERSION = 1:0:0
GENERIC_RELEASE = 0.3
GENERIC_VERSION = 0.3.0
GREP = /usr/bin/grep
HAVE_PKG_CONFIG = yes
INCATHA = 
INCGIW = 
INCGLOCK = 
INCGLOP = 
INCPPGLOP = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LIBATHA = 
LIBGIW = 
LIBGLOCK = 
LIBGLOP = 
LIBOBJS =  ${LIBOBJDIR}lstat$U.o
LIBPPGLOP = 
LIBS = -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}lstat$U.lo
MAKEINFO = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../.././install-sh -c -d
MPICXX = mpic++
MPILIBS =  
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = bobpp
PACKAGE_BUGREPORT = Bertrand.Lecun@prism.uvsq.fr
PACKAGE_NAME = bobpp
PACKAGE_STRING = bobpp 0.3.0
PACKAGE_TARNAME = bobpp
PACKAGE_URL = 
PACKAGE_VERSION = 0.3.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.3.0
abs_builddir = /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/examples/Mole
abs_srcdir = /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/examples/Mole
abs_top_builddir = /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib
abs_top_srcdir = /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin16.5.0
build_alias = 
build_cpu = x86_64
build_os = darwin16.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin16.5.0
host_alias = 
host_cpu = x86_64
host_os = darwin16.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/liulei/Dropbox/L.L./4Programming/PaperRelated/2-machine-flow-shop-VaR/bobpp_lib/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/./install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

#=======================
# Section to name the generated binaries
#=======================
PROG_MPI = cmolempi omolempi ctrapmpi otrapmpi
#PROG_ATHA = cmoleatha omoleatha ctrapatha otrapatha
PROG_SEQ = cmole omole ctrap otrap
PROG_THR = cmolethr omolethr ctrapthr otrapthr

#=======================
# General section
#=======================
CLEANFILES = ${noinst_PROGRAMS} *.o
LDADD = -L${prefix}/lib -lbobpp-${GENERIC_API_VERSION}
AM_CPPFLAGS = -I${prefix}/include/${GENERIC_LIBRARY_NAME}-${GENERIC_API_VERSION} -g

#=======================
# The Mole (sequential and thr)
#=======================
cmole_SOURCES = mole.cpp
cmole_CPPFLAGS = ${AM_CPPFLAGS} -DCOUNT
cmolethr_SOURCES = mole.cpp
cmolethr_CPPFLAGS = ${AM_CPPFLAGS} -DThreaded -DCOUNT
omole_SOURCES = mole.cpp
omolethr_SOURCES = mole.cpp
omolethr_CPPFLAGS = ${AM_CPPFLAGS} -DThreaded
ctrap_SOURCES = trap.cpp
ctrap_CPPFLAGS = ${AM_CPPFLAGS} -DCOUNT
ctrapthr_SOURCES = trap.cpp
ctrapthr_CPPFLAGS = ${AM_CPPFLAGS} -DThreaded -DCOUNT
otrap_SOURCES = trap.cpp
otrapthr_SOURCES = trap.cpp
otrapthr_CPPFLAGS = ${AM_CPPFLAGS} -DThreaded

#=======================
# The Atha and MPI environment
#=======================
#cmoleatha_SOURCES = mole.cpp
#cmoleatha_LDFLAGS = ${LIBATHA} -lbobpp_atha
#cmoleatha_CPPFLAGS = $(AM_CPPFLAGS) ${INCATHA} -DCOUNT -DAtha
#omoleatha_SOURCES = mole.cpp
#omoleatha_LDFLAGS = ${LIBATHA} -lbobpp_atha
#omoleatha_CPPFLAGS = $(AM_CPPFLAGS) ${INCATHA} -DAtha
#ctrapatha_SOURCES = trap.cpp
#ctrapatha_LDFLAGS = ${LIBATHA} -lbobpp_atha
#ctrapatha_CPPFLAGS = $(AM_CPPFLAGS) ${INCATHA} -DCOUNT -DAtha
#otrapatha_SOURCES = trap.cpp
#otrapatha_LDFLAGS = ${LIBATHA} -lbobpp_atha
#otrapatha_CPPFLAGS = $(AM_CPPFLAGS) ${INCATHA} -DAtha
MPICXXCOMPILE = $(MPICXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)

MPICXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
       --mode=link $(MPICXX) $(AM_CXXFLAGS) $(CXXFLAGS) \
       -lbobpp_mpi -o $@

cmolempi_SOURCES = mole.cpp
cmolempi_CPPFLAGS = $(AM_CPPFLAGS) ${INCGLOP} -DMPxMPI -DCOUNT
cmolempi_LINK = $(MPICXXLINK)
omolempi_SOURCES = mole.cpp
omolempi_CPPFLAGS = $(AM_CPPFLAGS) ${INCGLOP} -DMPxMPI
omolempi_LINK = $(MPICXXLINK)
ctrapmpi_SOURCES = trap.cpp
ctrapmpi_CPPFLAGS = $(AM_CPPFLAGS) ${INCGLOP} -DMPxMPI -DCOUNT
ctrapmpi_LINK = $(MPICXXLINK)
otrapmpi_SOURCES = trap.cpp
otrapmpi_CPPFLAGS = $(AM_CPPFLAGS) ${INCGLOP} -DMPxMPI
otrapmpi_LINK = $(MPICXXLINK)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu examples/Mole/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu examples/Mole/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
cmole$(EXEEXT): $(cmole_OBJECTS) $(cmole_DEPENDENCIES) 
	@rm -f cmole$(EXEEXT)
	$(CXXLINK) $(cmole_OBJECTS) $(cmole_LDADD) $(LIBS)
cmoleatha$(EXEEXT): $(cmoleatha_OBJECTS) $(cmoleatha_DEPENDENCIES) 
	@rm -f cmoleatha$(EXEEXT)
	$(cmoleatha_LINK) $(cmoleatha_OBJECTS) $(cmoleatha_LDADD) $(LIBS)
cmolempi$(EXEEXT): $(cmolempi_OBJECTS) $(cmolempi_DEPENDENCIES) 
	@rm -f cmolempi$(EXEEXT)
	$(cmolempi_LINK) $(cmolempi_OBJECTS) $(cmolempi_LDADD) $(LIBS)
cmolethr$(EXEEXT): $(cmolethr_OBJECTS) $(cmolethr_DEPENDENCIES) 
	@rm -f cmolethr$(EXEEXT)
	$(CXXLINK) $(cmolethr_OBJECTS) $(cmolethr_LDADD) $(LIBS)
ctrap$(EXEEXT): $(ctrap_OBJECTS) $(ctrap_DEPENDENCIES) 
	@rm -f ctrap$(EXEEXT)
	$(CXXLINK) $(ctrap_OBJECTS) $(ctrap_LDADD) $(LIBS)
ctrapatha$(EXEEXT): $(ctrapatha_OBJECTS) $(ctrapatha_DEPENDENCIES) 
	@rm -f ctrapatha$(EXEEXT)
	$(ctrapatha_LINK) $(ctrapatha_OBJECTS) $(ctrapatha_LDADD) $(LIBS)
ctrapmpi$(EXEEXT): $(ctrapmpi_OBJECTS) $(ctrapmpi_DEPENDENCIES) 
	@rm -f ctrapmpi$(EXEEXT)
	$(ctrapmpi_LINK) $(ctrapmpi_OBJECTS) $(ctrapmpi_LDADD) $(LIBS)
ctrapthr$(EXEEXT): $(ctrapthr_OBJECTS) $(ctrapthr_DEPENDENCIES) 
	@rm -f ctrapthr$(EXEEXT)
	$(CXXLINK) $(ctrapthr_OBJECTS) $(ctrapthr_LDADD) $(LIBS)
omole$(EXEEXT): $(omole_OBJECTS) $(omole_DEPENDENCIES) 
	@rm -f omole$(EXEEXT)
	$(CXXLINK) $(omole_OBJECTS) $(omole_LDADD) $(LIBS)
omoleatha$(EXEEXT): $(omoleatha_OBJECTS) $(omoleatha_DEPENDENCIES) 
	@rm -f omoleatha$(EXEEXT)
	$(omoleatha_LINK) $(omoleatha_OBJECTS) $(omoleatha_LDADD) $(LIBS)
omolempi$(EXEEXT): $(omolempi_OBJECTS) $(omolempi_DEPENDENCIES) 
	@rm -f omolempi$(EXEEXT)
	$(omolempi_LINK) $(omolempi_OBJECTS) $(omolempi_LDADD) $(LIBS)
omolethr$(EXEEXT): $(omolethr_OBJECTS) $(omolethr_DEPENDENCIES) 
	@rm -f omolethr$(EXEEXT)
	$(CXXLINK) $(omolethr_OBJECTS) $(omolethr_LDADD) $(LIBS)
otrap$(EXEEXT): $(otrap_OBJECTS) $(otrap_DEPENDENCIES) 
	@rm -f otrap$(EXEEXT)
	$(CXXLINK) $(otrap_OBJECTS) $(otrap_LDADD) $(LIBS)
otrapatha$(EXEEXT): $(otrapatha_OBJECTS) $(otrapatha_DEPENDENCIES) 
	@rm -f otrapatha$(EXEEXT)
	$(otrapatha_LINK) $(otrapatha_OBJECTS) $(otrapatha_LDADD) $(LIBS)
otrapmpi$(EXEEXT): $(otrapmpi_OBJECTS) $(otrapmpi_DEPENDENCIES) 
	@rm -f otrapmpi$(EXEEXT)
	$(otrapmpi_LINK) $(otrapmpi_OBJECTS) $(otrapmpi_LDADD) $(LIBS)
otrapthr$(EXEEXT): $(otrapthr_OBJECTS) $(otrapthr_DEPENDENCIES) 
	@rm -f otrapthr$(EXEEXT)
	$(CXXLINK) $(otrapthr_OBJECTS) $(otrapthr_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cmole-mole.Po
include ./$(DEPDIR)/cmoleatha-mole.Po
include ./$(DEPDIR)/cmolempi-mole.Po
include ./$(DEPDIR)/cmolethr-mole.Po
include ./$(DEPDIR)/ctrap-trap.Po
include ./$(DEPDIR)/ctrapatha-trap.Po
include ./$(DEPDIR)/ctrapmpi-trap.Po
include ./$(DEPDIR)/ctrapthr-trap.Po
include ./$(DEPDIR)/mole.Po
include ./$(DEPDIR)/omoleatha-mole.Po
include ./$(DEPDIR)/omolempi-mole.Po
include ./$(DEPDIR)/omolethr-mole.Po
include ./$(DEPDIR)/otrapatha-trap.Po
include ./$(DEPDIR)/otrapmpi-trap.Po
include ./$(DEPDIR)/otrapthr-trap.Po
include ./$(DEPDIR)/trap.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

cmole-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmole_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmole-mole.o -MD -MP -MF $(DEPDIR)/cmole-mole.Tpo -c -o cmole-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/cmole-mole.Tpo $(DEPDIR)/cmole-mole.Po
#	source='mole.cpp' object='cmole-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmole_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmole-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

cmole-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmole_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmole-mole.obj -MD -MP -MF $(DEPDIR)/cmole-mole.Tpo -c -o cmole-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/cmole-mole.Tpo $(DEPDIR)/cmole-mole.Po
#	source='mole.cpp' object='cmole-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmole_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmole-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

cmoleatha-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmoleatha-mole.o -MD -MP -MF $(DEPDIR)/cmoleatha-mole.Tpo -c -o cmoleatha-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/cmoleatha-mole.Tpo $(DEPDIR)/cmoleatha-mole.Po
#	source='mole.cpp' object='cmoleatha-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmoleatha-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

cmoleatha-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmoleatha-mole.obj -MD -MP -MF $(DEPDIR)/cmoleatha-mole.Tpo -c -o cmoleatha-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/cmoleatha-mole.Tpo $(DEPDIR)/cmoleatha-mole.Po
#	source='mole.cpp' object='cmoleatha-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmoleatha-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

#cmolempi-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmolempi-mole.o -MD -MP -MF $(DEPDIR)/cmolempi-mole.Tpo -c -o cmolempi-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/cmolempi-mole.Tpo $(DEPDIR)/cmolempi-mole.Po
#	source='mole.cpp' object='cmolempi-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmolempi-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

cmolempi-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmolempi-mole.obj -MD -MP -MF $(DEPDIR)/cmolempi-mole.Tpo -c -o cmolempi-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/cmolempi-mole.Tpo $(DEPDIR)/cmolempi-mole.Po
#	source='mole.cpp' object='cmolempi-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmolempi-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

cmolethr-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmolethr-mole.o -MD -MP -MF $(DEPDIR)/cmolethr-mole.Tpo -c -o cmolethr-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/cmolethr-mole.Tpo $(DEPDIR)/cmolethr-mole.Po
#	source='mole.cpp' object='cmolethr-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmolethr-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

cmolethr-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cmolethr-mole.obj -MD -MP -MF $(DEPDIR)/cmolethr-mole.Tpo -c -o cmolethr-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/cmolethr-mole.Tpo $(DEPDIR)/cmolethr-mole.Po
#	source='mole.cpp' object='cmolethr-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cmolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cmolethr-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

ctrap-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrap-trap.o -MD -MP -MF $(DEPDIR)/ctrap-trap.Tpo -c -o ctrap-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/ctrap-trap.Tpo $(DEPDIR)/ctrap-trap.Po
#	source='trap.cpp' object='ctrap-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrap-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

ctrap-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrap-trap.obj -MD -MP -MF $(DEPDIR)/ctrap-trap.Tpo -c -o ctrap-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/ctrap-trap.Tpo $(DEPDIR)/ctrap-trap.Po
#	source='trap.cpp' object='ctrap-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrap_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrap-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

ctrapatha-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapatha-trap.o -MD -MP -MF $(DEPDIR)/ctrapatha-trap.Tpo -c -o ctrapatha-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/ctrapatha-trap.Tpo $(DEPDIR)/ctrapatha-trap.Po
#	source='trap.cpp' object='ctrapatha-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapatha-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

ctrapatha-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapatha-trap.obj -MD -MP -MF $(DEPDIR)/ctrapatha-trap.Tpo -c -o ctrapatha-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/ctrapatha-trap.Tpo $(DEPDIR)/ctrapatha-trap.Po
#	source='trap.cpp' object='ctrapatha-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapatha-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

#ctrapmpi-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapmpi-trap.o -MD -MP -MF $(DEPDIR)/ctrapmpi-trap.Tpo -c -o ctrapmpi-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/ctrapmpi-trap.Tpo $(DEPDIR)/ctrapmpi-trap.Po
#	source='trap.cpp' object='ctrapmpi-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapmpi-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

ctrapmpi-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapmpi-trap.obj -MD -MP -MF $(DEPDIR)/ctrapmpi-trap.Tpo -c -o ctrapmpi-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/ctrapmpi-trap.Tpo $(DEPDIR)/ctrapmpi-trap.Po
#	source='trap.cpp' object='ctrapmpi-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapmpi-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

ctrapthr-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapthr-trap.o -MD -MP -MF $(DEPDIR)/ctrapthr-trap.Tpo -c -o ctrapthr-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/ctrapthr-trap.Tpo $(DEPDIR)/ctrapthr-trap.Po
#	source='trap.cpp' object='ctrapthr-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapthr-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

ctrapthr-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ctrapthr-trap.obj -MD -MP -MF $(DEPDIR)/ctrapthr-trap.Tpo -c -o ctrapthr-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/ctrapthr-trap.Tpo $(DEPDIR)/ctrapthr-trap.Po
#	source='trap.cpp' object='ctrapthr-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ctrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ctrapthr-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

omoleatha-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omoleatha-mole.o -MD -MP -MF $(DEPDIR)/omoleatha-mole.Tpo -c -o omoleatha-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/omoleatha-mole.Tpo $(DEPDIR)/omoleatha-mole.Po
#	source='mole.cpp' object='omoleatha-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omoleatha-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

omoleatha-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omoleatha-mole.obj -MD -MP -MF $(DEPDIR)/omoleatha-mole.Tpo -c -o omoleatha-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/omoleatha-mole.Tpo $(DEPDIR)/omoleatha-mole.Po
#	source='mole.cpp' object='omoleatha-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omoleatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omoleatha-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

#omolempi-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omolempi-mole.o -MD -MP -MF $(DEPDIR)/omolempi-mole.Tpo -c -o omolempi-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/omolempi-mole.Tpo $(DEPDIR)/omolempi-mole.Po
#	source='mole.cpp' object='omolempi-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omolempi-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

omolempi-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omolempi-mole.obj -MD -MP -MF $(DEPDIR)/omolempi-mole.Tpo -c -o omolempi-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/omolempi-mole.Tpo $(DEPDIR)/omolempi-mole.Po
#	source='mole.cpp' object='omolempi-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolempi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omolempi-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

omolethr-mole.o: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omolethr-mole.o -MD -MP -MF $(DEPDIR)/omolethr-mole.Tpo -c -o omolethr-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp
	$(am__mv) $(DEPDIR)/omolethr-mole.Tpo $(DEPDIR)/omolethr-mole.Po
#	source='mole.cpp' object='omolethr-mole.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omolethr-mole.o `test -f 'mole.cpp' || echo '$(srcdir)/'`mole.cpp

omolethr-mole.obj: mole.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT omolethr-mole.obj -MD -MP -MF $(DEPDIR)/omolethr-mole.Tpo -c -o omolethr-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`
	$(am__mv) $(DEPDIR)/omolethr-mole.Tpo $(DEPDIR)/omolethr-mole.Po
#	source='mole.cpp' object='omolethr-mole.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(omolethr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o omolethr-mole.obj `if test -f 'mole.cpp'; then $(CYGPATH_W) 'mole.cpp'; else $(CYGPATH_W) '$(srcdir)/mole.cpp'; fi`

otrapatha-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapatha-trap.o -MD -MP -MF $(DEPDIR)/otrapatha-trap.Tpo -c -o otrapatha-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/otrapatha-trap.Tpo $(DEPDIR)/otrapatha-trap.Po
#	source='trap.cpp' object='otrapatha-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapatha-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

otrapatha-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapatha-trap.obj -MD -MP -MF $(DEPDIR)/otrapatha-trap.Tpo -c -o otrapatha-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/otrapatha-trap.Tpo $(DEPDIR)/otrapatha-trap.Po
#	source='trap.cpp' object='otrapatha-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapatha_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapatha-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

#otrapmpi-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapmpi-trap.o -MD -MP -MF $(DEPDIR)/otrapmpi-trap.Tpo -c -o otrapmpi-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/otrapmpi-trap.Tpo $(DEPDIR)/otrapmpi-trap.Po
#	source='trap.cpp' object='otrapmpi-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapmpi-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

otrapmpi-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapmpi-trap.obj -MD -MP -MF $(DEPDIR)/otrapmpi-trap.Tpo -c -o otrapmpi-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/otrapmpi-trap.Tpo $(DEPDIR)/otrapmpi-trap.Po
#	source='trap.cpp' object='otrapmpi-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapmpi_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapmpi-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

otrapthr-trap.o: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapthr-trap.o -MD -MP -MF $(DEPDIR)/otrapthr-trap.Tpo -c -o otrapthr-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp
	$(am__mv) $(DEPDIR)/otrapthr-trap.Tpo $(DEPDIR)/otrapthr-trap.Po
#	source='trap.cpp' object='otrapthr-trap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapthr-trap.o `test -f 'trap.cpp' || echo '$(srcdir)/'`trap.cpp

otrapthr-trap.obj: trap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT otrapthr-trap.obj -MD -MP -MF $(DEPDIR)/otrapthr-trap.Tpo -c -o otrapthr-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`
	$(am__mv) $(DEPDIR)/otrapthr-trap.Tpo $(DEPDIR)/otrapthr-trap.Po
#	source='trap.cpp' object='otrapthr-trap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(otrapthr_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o otrapthr-trap.obj `if test -f 'trap.cpp'; then $(CYGPATH_W) 'trap.cpp'; else $(CYGPATH_W) '$(srcdir)/trap.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am

cmolempi-mole.o: mole.cpp
	$(MPICXXCOMPILE) -DCOUNT -DMPxMPI -c -o $@ $< 
omolempi-mole.o: mole.cpp
	$(MPICXXCOMPILE) -DMPxMPI -c -o $@ $< 
ctrapmpi-trap.o: trap.cpp
	$(MPICXXCOMPILE) -DCOUNT -DMPxMPI -c -o $@ $< 
otrapmpi-trap.o: trap.cpp
	$(MPICXXCOMPILE) -DMPxMPI -c -o $@ $< 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
